{
  "rules": {
    "rooms": {
      ".read": "true",
      "$roomId": {
        ".write": "!data.exists() || data.child('hostUid').val() === auth.uid || data.child('hostUid').val().beginsWith('guest_') || (auth != null && data.child('players').child(auth.uid).exists()) || data.child('players').hasChild(newData.child('hostUid').val())",
        ".validate": "newData.hasChildren(['hostUid', 'gameMode', 'status'])",
        "players": {
          "$playerId": {
            ".write": "$playerId === auth.uid || ($playerId.beginsWith('guest_') && newData.child('uid').val() === $playerId) || root.child('rooms').child($roomId).child('hostUid').val() === auth.uid || root.child('rooms').child($roomId).child('hostUid').val() === $playerId"
          }
        },
        "gameState": {
          ".write": "root.child('rooms').child($roomId).child('hostUid').val() === auth.uid || root.child('rooms').child($roomId).child('hostUid').val().beginsWith('guest_')"
        }
      }
    },
    "gameModes": {
      ".read": true,
      ".write": false
    },
    "presence": {
      "$uid": {
        ".read": true,
        ".write": "$uid === auth.uid || ($uid.beginsWith('guest_') && (!newData.exists() || newData.child('uid').val() === $uid))"
      }
    }
  }
}

